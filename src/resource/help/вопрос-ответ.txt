
1. Что означает @. См. инстркцию ps3 Примеры->Первичная кастройка_АП->Внесение артикулов
2. Вес рассчитывается - см. инстркцию ps3 Примеры->Первичная кастройка_АП->Внесение артикулов
3. Цвета на рисунке окна. См. инмтрукцию ps3 Примеры->Первичная кастройка_АП->Начало проектирования
4. Типовые изделия. В режиме конструтора окна нажимаем комбинацию клавишь ctrl-s, появлется окно для ввода....
   Вообще есть https://www.youtube.com/watch?v=TbAZXam8cr8
5. Графика java 2D D:\Book\Java\Java.2012-Hebibylin java-7   стр. 226
6. Предупреждение компилятора -Xlint:unchecked Поект->Свойства->Компиляция...
7. Автоподбор см. HRLP4 Группы описание текстур.
8. Серия и Категория см. HELP4 Первичная настройка -> Внесение мат. ценностей.
9. Как блокировать события см. book 2020 javaFx.
10. Параметр 31081 @-определяет наличие зеркальной проверки 
11 Красные круги и овалы - не описанные соединения, желтые круги - не описанные заполнения.
12.Графика java 2D D:\Book\Java\Java.2014-Том2.Расш.средства прогр 
13.Количество на шаг. см. Конструктив->Соединения...
14. длина штапика см. windoc/doc3/othe/katalog-prows-58.pdf d в самом конце.
15. java --list-modules модули jdk

   == ЗАМЕТКИ  ==
1. Насиройки->Расчётные данные <Коэфф. рентабельности>
2. Констрктив->Системы <Коэф. рентабельности>
3. Расчёт профилей с оценкой остатков. Настройки->Расчётные данные->Расчётные <Припуск для реза, мм(толщина фрезы)>  

В новой модульной системе есть четыре типа модулей:
Системные модули      — это модули, перечисленные при запуске команды  list-modules выше. Они включают модули Java SE и JDK.
Модули приложений     — эти модули — это то, что мы обычно хотим создать, когда решаем использовать модули. Они названы и определены в скомпилированном  файле module-info.class , включенном в собранный JAR.
Автоматические модули — мы можем включить неофициальные модули, добавив существующие файлы JAR в путь к модулю. Имя модуля будет получено из имени JAR. Автоматические модули будут иметь полный доступ для чтения ко всем другим модулям, загруженным по пути.
Безымянный модуль     — когда класс или JAR загружается в путь к классам, но не в путь к модулю, он автоматически добавляется в безымянный модуль. Это универсальный модуль для обеспечения обратной совместимости с ранее написанным кодом Java.